{"version":3,"sources":["webpack:///./node_modules/react-measure/lib/with-content-rect.js","webpack:///./node_modules/react-measure/lib/react-measure.js","webpack:///./node_modules/react-measure/lib/Measure.js","webpack:///./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack:///./node_modules/react-measure/lib/get-types.js","webpack:///./node_modules/react-measure/lib/get-content-rect.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react","__webpack_require__","_propTypes2","_interopRequireDefault","_resizeObserverPolyfill2","_getTypes2","_getContentRect2","obj","__esModule","default","_possibleConstructorReturn","self","ReferenceError","types","WrappedComponent","_class","_temp2","_Component","WithContentRect","_ref","_temp","_this","instance","TypeError","_classCallCheck","this","_len","args","Array","_key","__proto__","getPrototypeOf","apply","concat","state","contentRect","entry","client","offset","scroll","bounds","margin","measure","entries","_node","animationFrameID","window","requestAnimationFrame","_resizeObserver","setState","onResize","_handleRef","node","observe","disconnect","innerRef","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Component","cancelAnimationFrame","_props","keys","indexOf","_objectWithoutProperties","createElement","measureRef","propTypes","bool","func","withContentRect","undefined","_Measure2","_withContentRect2","Measure","children","displayName","r","__webpack_exports__","global","MapShim","Map","getIndex","arr","result","some","index","class_1","__entries__","get","set","push","delete","splice","has","clear","forEach","callback","ctx","_i","_a","isBrowser","document","global$1","Math","Function","requestAnimationFrame$1","bind","setTimeout","Date","now","trailingTimeout","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","attributes","childList","characterData","subtree","removeEventListener","_b","propertyName","getInstance","instance_","defineConfigurable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","reduce","size","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","width","height","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","DOMRectReadOnly","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","observation","map","WeakMap","ResizeObserver","method","allowedTypes","type","calculations","clientTop","clientLeft","offsetTop","offsetLeft","offsetWidth","offsetHeight","scrollTop","scrollLeft","scrollWidth","scrollHeight","getBoundingClientRect","parseInt","marginTop","marginRight","marginBottom","marginLeft"],"mappings":"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","file":"6-ee07833e1e3d85b10bc5.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _resizeObserverPolyfill = require('resize-observer-polyfill');\n\nvar _resizeObserverPolyfill2 = _interopRequireDefault(_resizeObserverPolyfill);\n\nvar _getTypes = require('./get-types');\n\nvar _getTypes2 = _interopRequireDefault(_getTypes);\n\nvar _getContentRect = require('./get-content-rect');\n\nvar _getContentRect2 = _interopRequireDefault(_getContentRect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction withContentRect(types) {\n  return function (WrappedComponent) {\n    var _class, _temp2;\n\n    return _temp2 = _class = function (_Component) {\n      _inherits(WithContentRect, _Component);\n\n      function WithContentRect() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, WithContentRect);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = WithContentRect.__proto__ || Object.getPrototypeOf(WithContentRect)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n          contentRect: {\n            entry: {},\n            client: {},\n            offset: {},\n            scroll: {},\n            bounds: {},\n            margin: {}\n          }\n        }, _this.measure = function (entries) {\n          var contentRect = (0, _getContentRect2.default)(_this._node, types || (0, _getTypes2.default)(_this.props));\n\n          if (entries) {\n            contentRect.entry = entries[0].contentRect;\n          }\n\n          _this.animationFrameID = window.requestAnimationFrame(function () {\n            if (_this._resizeObserver) {\n              _this.setState({ contentRect: contentRect });\n            }\n          });\n\n          if (typeof _this.props.onResize === 'function') {\n            _this.props.onResize(contentRect);\n          }\n        }, _this._handleRef = function (node) {\n          if (_this._resizeObserver) {\n            if (node) {\n              _this._resizeObserver.observe(node);\n            } else {\n              _this._resizeObserver.disconnect(_this._node);\n            }\n          }\n          _this._node = node;\n\n          if (typeof _this.props.innerRef === 'function') {\n            _this.props.innerRef(node);\n          }\n        }, _temp), _possibleConstructorReturn(_this, _ret);\n      }\n\n      _createClass(WithContentRect, [{\n        key: 'componentWillMount',\n        value: function componentWillMount() {\n          this._resizeObserver = new _resizeObserverPolyfill2.default(this.measure);\n          this.animationFrameID = null;\n        }\n      }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n          if (this._resizeObserver && this._node) {\n            this._resizeObserver.disconnect(this._node);\n          }\n          this._resizeObserver = null;\n          window.cancelAnimationFrame(this.animationFrameID);\n        }\n      }, {\n        key: 'render',\n        value: function render() {\n          var _props = this.props,\n              innerRef = _props.innerRef,\n              onResize = _props.onResize,\n              props = _objectWithoutProperties(_props, ['innerRef', 'onResize']);\n\n          return (0, _react.createElement)(WrappedComponent, _extends({}, props, {\n            measureRef: this._handleRef,\n            measure: this.measure,\n            contentRect: this.state.contentRect\n          }));\n        }\n      }]);\n\n      return WithContentRect;\n    }(_react.Component), _class.propTypes = {\n      client: _propTypes2.default.bool,\n      offset: _propTypes2.default.bool,\n      scroll: _propTypes2.default.bool,\n      bounds: _propTypes2.default.bool,\n      margin: _propTypes2.default.bool,\n      innerRef: _propTypes2.default.func,\n      onResize: _propTypes2.default.func\n    }, _temp2;\n  };\n}\n\nexports.default = withContentRect;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withContentRect = exports.default = undefined;\n\nvar _Measure = require('./Measure');\n\nvar _Measure2 = _interopRequireDefault(_Measure);\n\nvar _withContentRect = require('./with-content-rect');\n\nvar _withContentRect2 = _interopRequireDefault(_withContentRect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Measure2.default;\nexports.withContentRect = _withContentRect2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _withContentRect = require('./with-content-rect');\n\nvar _withContentRect2 = _interopRequireDefault(_withContentRect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Measure = (0, _withContentRect2.default)()(function Measure(_ref) {\n  var measure = _ref.measure,\n      measureRef = _ref.measureRef,\n      contentRect = _ref.contentRect,\n      children = _ref.children;\n\n  return children({ measure: measure, measureRef: measureRef, contentRect: contentRect });\n});\n\nMeasure.displayName = 'Measure';\nMeasure.propTypes.children = _propTypes2.default.func;\n\nexports.default = Measure;","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getTypes;\nvar types = ['client', 'offset', 'scroll', 'bounds', 'margin'];\n\nfunction getTypes(props) {\n  var allowedTypes = [];\n  types.forEach(function (type) {\n    if (props[type]) {\n      allowedTypes.push(type);\n    }\n  });\n  return allowedTypes;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction getContentRect(node, types) {\n  var calculations = {};\n\n  if (types.indexOf('client') > -1) {\n    calculations.client = {\n      top: node.clientTop,\n      left: node.clientLeft,\n      width: node.clientWidth,\n      height: node.clientHeight\n    };\n  }\n\n  if (types.indexOf('offset') > -1) {\n    calculations.offset = {\n      top: node.offsetTop,\n      left: node.offsetLeft,\n      width: node.offsetWidth,\n      height: node.offsetHeight\n    };\n  }\n\n  if (types.indexOf('scroll') > -1) {\n    calculations.scroll = {\n      top: node.scrollTop,\n      left: node.scrollLeft,\n      width: node.scrollWidth,\n      height: node.scrollHeight\n    };\n  }\n\n  if (types.indexOf('bounds') > -1) {\n    var rect = node.getBoundingClientRect();\n    calculations.bounds = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.width,\n      height: rect.height\n    };\n  }\n\n  if (types.indexOf('margin') > -1) {\n    var styles = getComputedStyle(node);\n    calculations.margin = {\n      top: styles ? parseInt(styles.marginTop) : 0,\n      right: styles ? parseInt(styles.marginRight) : 0,\n      bottom: styles ? parseInt(styles.marginBottom) : 0,\n      left: styles ? parseInt(styles.marginLeft) : 0\n    };\n  }\n\n  return calculations;\n}\n\nexports.default = getContentRect;"],"sourceRoot":""}